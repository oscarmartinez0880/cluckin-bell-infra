name: Terraform (reusable)

on:
  workflow_call:
    inputs:
      working_directory:
        description: "Directory containing Terraform configuration"
        required: false
        default: "."
        type: string
      aws_region:
        description: "AWS region"
        required: false
        default: "us-east-1"
        type: string
      terraform_version:
        description: "Terraform version"
        required: false
        default: "1.7.5"
        type: string
      apply:
        description: "Whether to apply changes"
        required: false
        default: false
        type: boolean
      var_file:
        description: "Optional -var-file path (e.g., env/dev.tfvars)"
        required: false
        type: string
    secrets:
      terraform_role_arn:
        description: "AWS IAM Role ARN to assume via OIDC for Terraform"
        required: true

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    name: Terraform plan/apply
    runs-on: ubuntu-24.04
    env:
      TF_IN_AUTOMATION: "true"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ inputs.terraform_version }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.terraform_role_arn }}
          aws-region: ${{ inputs.aws_region }}

      - name: Terraform Init
        working-directory: ${{ inputs.working_directory }}
        run: |
          terraform --version
          terraform init -input=false

      - name: Terraform Validate
        working-directory: ${{ inputs.working_directory }}
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        working-directory: ${{ inputs.working_directory }}
        env:
          TF_CLI_ARGS_plan: "-no-color"
        run: |
          if [ -n "${{ inputs.var_file }}" ]; then
            terraform plan -input=false -out=tfplan -var-file="${{ inputs.var_file }}"
          else
            terraform plan -input=false -out=tfplan
          fi

      - name: Upload plan artifact
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: ${{ inputs.working_directory }}/tfplan

      - name: Terraform Apply
        if: inputs.apply == true
        working-directory: ${{ inputs.working_directory }}
        run: terraform apply -input=false -auto-approve tfplan